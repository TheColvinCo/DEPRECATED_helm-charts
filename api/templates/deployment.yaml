{{- $name := "app" -}}
{{- $data := dict "name" $name "Chart" .Chart "Release" .Release "Values" .Values -}}
{{- $fullName := include "api.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-{{ $name }}
  labels:
    app: {{ template "api.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "api.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "api.name" . }}
        release: {{ .Release.Name }}
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
        - name: nginx
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          volumeMounts:
{{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 12 }}
{{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: php
          image: "{{ .Values.php.image.repository }}:{{ .Values.php.image.tag }}"
          imagePullPolicy: {{ .Values.php.image.pullPolicy }}
          livenessProbe:
            exec:
              command:
              - ls
              - /srv/socket/fpm.sock
            initialDelaySeconds: 5
          readinessProbe:
            exec:
              command:
              - ls
              - /srv/socket/fpm.sock
            initialDelaySeconds: 5
          envFrom:
{{- if .Values.php.envFrom }}
{{ toYaml .Values.php.envFrom | indent 12 }}
{{- end }}
          env:
            {{- range $key, $val := .Values.php.extraEnvVars }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
{{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 12 }}
{{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      enableServiceLinks: false
      terminationGracePeriodSeconds: 60
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
{{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8 }}
{{- end }}
      dnsConfig:
        options:
          - name: ndots
            value: "1"
